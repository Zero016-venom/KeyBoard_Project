// <auto-generated />
using System;
using ASSIGN_Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASSIGN_Data.Migrations
{
    [DbContext(typeof(ASSIGNMENT_NET104Context))]
    [Migration("20240323142856_Update2")]
    partial class Update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASSIGN_Data.Models.GioHang", b =>
                {
                    b.Property<Guid>("Id_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_User");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.GioHangCT", b =>
                {
                    b.Property<Guid>("Id_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id_User");

                    b.HasIndex("ID_SP");

                    b.ToTable("GioHangCT", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HinhThucTT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenHTTT")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HinhThucThanhToan", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_HinhThucTT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_User");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HoaDonCT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Id_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_SP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SLBan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_HoaDon");

                    b.HasIndex("Id_SP")
                        .IsUnique();

                    b.ToTable("HoaDonCT", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.LoaiSP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenLoaiSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LoaiSP", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaSP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Id_LoaiSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SLTon")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_LoaiSP");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.ThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_HTTT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTT")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_HTTT");

                    b.HasIndex("Id_HoaDon");

                    b.ToTable("ThanhToan", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Role")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenDN")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Role");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ASSIGN_Data.Models.GioHang", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.User", "User")
                        .WithOne("GioHang")
                        .HasForeignKey("ASSIGN_Data.Models.GioHang", "Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.GioHangCT", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.SanPham", "SanPham")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("ID_SP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASSIGN_Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HoaDon", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.User", "User")
                        .WithMany("HoaDons")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HoaDonCT", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonCTs")
                        .HasForeignKey("Id_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASSIGN_Data.Models.SanPham", "SanPham")
                        .WithOne("HoaDonCT")
                        .HasForeignKey("ASSIGN_Data.Models.HoaDonCT", "Id_SP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.SanPham", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.LoaiSP", "LoaiSP")
                        .WithMany("SanPhams")
                        .HasForeignKey("Id_LoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSP");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.ThanhToan", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.HinhThucTT", "HinhThucTT")
                        .WithMany("ThanhToans")
                        .HasForeignKey("Id_HTTT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASSIGN_Data.Models.HoaDon", "HoaDon")
                        .WithMany("ThanhToans")
                        .HasForeignKey("Id_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HinhThucTT");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.User", b =>
                {
                    b.HasOne("ASSIGN_Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Id_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangCTs");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HinhThucTT", b =>
                {
                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonCTs");

                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.LoaiSP", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ASSIGN_Data.Models.SanPham", b =>
                {
                    b.Navigation("GioHangCTs");

                    b.Navigation("HoaDonCT")
                        .IsRequired();
                });

            modelBuilder.Entity("ASSIGN_Data.Models.User", b =>
                {
                    b.Navigation("GioHang")
                        .IsRequired();

                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
